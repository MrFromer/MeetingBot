from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from config import TOKEN_API
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
import re
from database import db_start, create_profile, save_profile, look_profile, delete_profile, edit_profile_photo_db, edit_profile_name_db, edit_profile_age_db, edit_profile_location_db, edit_profile_description_db, update_log_look
from keyboards import kb, kb_cancel, ikb_edit, ikb_look
import tracemalloc

tracemalloc.start()
storage = MemoryStorage() #—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –º–∞–Ω–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
bot = Bot(TOKEN_API)
dp  = Dispatcher(bot, storage=storage)

async def startup(_):
    await db_start() #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –±–¥
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')


###################################################################################################  –±–ª–æ–∫ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–º–∞–Ω–¥
TEXT_START = '''
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! 
üëâüèº–í–æ—Ç —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç:
<b>/start</b> - –≤–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
<b>/create</b> - —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
<b>/cancel</b> - –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
<b>/edit</b> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
<b>/delete</b> - —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
<b>/profile</b> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
<b>/description</b> - –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
<b>/return</b> - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
'''

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_sticker(chat_id= message.chat.id, sticker="CAACAgIAAxkBAAEKoONlPeHJlBXIIlquMX1oVutb58B-tAACiwEAAiteUwujYbxpJDSDUDAE")
    await bot.send_message(chat_id=message.chat.id, text=TEXT_START, parse_mode='HTML', reply_markup=kb)
    await message.delete()

TEXT_DESCRIPTION = '''
–ù–∞—à –±–æ—Ç –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏!
–°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π —Å–≤–æ–∏.
'''
@dp.message_handler(commands=['description'])
async def command_start(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text=TEXT_DESCRIPTION, parse_mode='HTML', reply_markup=ReplyKeyboardRemove())
    await message.delete()

    
################################################################################################### –±–ª–æ–∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º 
#–≤—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ù–£–ñ–ù–û –î–û–†–ê–ë–û–¢–ê–¢–¨ –ü–†–û–í–ï–†–ö–£ ID —Ç.–µ —á—Ç–æ —É –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—å)
@dp.message_handler(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
async def watch_profile(message: types.Message):
    profiles = await look_profile(message.from_user.id)
    k = 0
    # if not profile:
    #     await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    # else:
    #     await bot.send_photo(chat_id=message.from_user.id,)
    for profile in profiles:
        if int(profile[0]) == int(message.from_user.id):
            k = 1
            break
    if k == 0:
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    elif k == 1:
        await bot.send_photo(chat_id=message.from_user.id, photo=profile[1], caption=f'–ò–º—è: {profile[2]}; –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}; –õ–æ–∫–∞—Ü–∏—è: {profile[4]};\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile[5]};')

#—Ç–æ–∂–µ —Å–∞–º–æ–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–æ–º–º–∞–Ω–¥—É
@dp.message_handler(commands=['profile'])
async def watch_profile(message: types.Message):
    profiles = await look_profile(message.from_user.id)
    k = 0
    # if not profile:
    #     await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    # else:
    #     await bot.send_photo(chat_id=message.from_user.id,)
    for profile in profiles:
        if int(profile[0]) == int(message.from_user.id):
            k = 1
            break
    if k == 0:
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    elif k == 1:
        await bot.send_photo(chat_id=message.from_user.id, photo=profile[1], caption=f'–ò–º—è: {profile[2]}; –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}; –õ–æ–∫–∞—Ü–∏—è: {profile[4]};\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile[5]};')    


#—É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
@dp.message_handler(text='–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
async def delet_profile(message: types.Message):
    data = await delete_profile(message.from_user.id)
    if data == 0:
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ /create')
    else:
        await delete_profile(message.from_user.id) #—Ñ-—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–∞ database –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è 
        await message.reply('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª—ë–Ω, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≥–æ –Ω–∞–∂–º–∏—Ç–∞ –Ω–∞ /create')

#—Ç–æ–∂–µ —Å–∞–º–æ–µ, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–æ–º–º–∞–Ω–¥—É
@dp.message_handler(commands=['delete'])
async def delet_profile(message: types.Message):
    data = await delete_profile(message.from_user.id)
    if data == 0:
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ /create')
    else:
        await delete_profile(message.from_user.id) #—Ñ-—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–∞ database –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è 
        await message.reply('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª—ë–Ω, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≥–æ –Ω–∞–∂–º–∏—Ç–∞ –Ω–∞ /create')
    

################################################################################################### –±–ª–æ–∫ –ø–æ—ç—Ç–∞–ø–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
#–ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ø–æ—ç—Ç–∞–ø–Ω—ã–µ –¥–µ–π—Å—Ç–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è (—ç—Ç–∞–ø—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞—Å—Å–µ –Ω–∏–∂–µ), —Ç–∞–∫-–∂–µ –µ—Å—Ç—å —Ñ-—Ü–∏—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–º–º–∞–Ω–¥—É /cancel
class Profile(StatesGroup): #–æ–±—ä–µ–∫—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –¥–ª—è FSM (–º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π)
    photo = State()
    name = State()
    age = State()
    location = State()
    desc = State()
    
#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –º–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@dp.message_handler(text='–û—Ç–º–µ–Ω–∏—Ç—å', state='*') # * –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–∞ —Ñ-—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
async def command_cancel(message: types.Message, state:FSMContext): #state:FSMContext –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é state –º—ã –æ–±–æ–∑–Ω–∞—á–∞–µ–º –∫–∞–∫ FSMContext
    if state is None: #–µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–µ, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
        return
    
    await state.finish()
    await message.reply(text='–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã, –ø—Ä–∏–¥—ë—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≥–æ!', reply_markup=kb)
#—Ç–∞–∫–∞—è-–∂–µ —á—Ç–æ –∏ –≤—ã—à–µ —Ç–æ–ª—å–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–º–∞–Ω–¥—É –Ω–∞ –≤—Ö–æ–¥
@dp.message_handler(commands=['cancel'], state='*') # * –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–∞ —Ñ-—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
async def command_cancel(message: types.Message, state:FSMContext): #state:FSMContext –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é state –º—ã –æ–±–æ–∑–Ω–∞—á–∞–µ–º –∫–∞–∫ FSMContext
    if state is None: #–µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–µ, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
        return
    
    await state.finish()
    await message.reply(text='–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã, –ø—Ä–∏–¥—ë—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≥–æ!', reply_markup=kb)

#–Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º FSM –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ photo
@dp.message_handler(text='–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
async def command_create(message: types.Message) -> None:
    await create_profile(user_id=message.from_user.id) #–≤—ã–∑—ã–≤–∞–µ–º —Ñ-—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await message.reply(text='–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É! –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ', reply_markup=kb_cancel)
    await Profile.photo.set() #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞—Å—Å—É Profile –∏ —Å—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ 'photo'

#—Ç–∞–∫–∞—è-–∂–µ —á—Ç–æ –∏ –≤—ã—à–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–º–∞–Ω–¥—É –Ω–∞ –≤—Ö–æ–¥
@dp.message_handler(commands=['create'])
async def command_create(message: types.Message) -> None:
    await create_profile(user_id=message.from_user.id) #–≤—ã–∑—ã–≤–∞–µ–º —Ñ-—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await message.reply(text='–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É! –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ', reply_markup=kb_cancel)
    await Profile.photo.set() #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞—Å—Å—É Profile –∏ —Å—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ 'photo'

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
@dp.message_handler(lambda message: not message.photo, state=Profile.photo) #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ (–∫–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–≤–Ω–æ 'photo')
async def ckeck_photo(message: types.Message):
    await message.reply('–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

#–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –≤ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data
@dp.message_handler(content_types=['photo'], state=Profile.photo) #state=Profile.photo - —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è photo
async def load_photo(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data: #data - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π, –ø–æ—Ç–æ–º –≤ –∫–æ–Ω—Ü–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–µ—Å—É—Ç—Å—è –≤ –±–∞–∑—É SQl
        data['photo'] = message.photo[0].file_id #–≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–¥ –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º photo —Å–æ—Ö—Ä–∞–Ω—è–µ–º id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    await message.reply('–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –∏–º—è')
    await Profile.next()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç
@dp.message_handler(lambda message: not message.text.isalpha(), state=Profile.name)  #isalpha() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ "text" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–∫—Å—Ç–∞ (—Ç.–µ –Ω–µ —Å–∏–º–≤–æ–ª—ã –∏ —Ü–∏—Ñ—Ä—ã) –∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
async def check_name(message: types.Message):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–µ–∑ —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤!')

#–∑–∞–≥—Ä—É–∑–∫–∞ –∏–º–µ–Ω–∏ –≤ —Å–ª–æ–≤–∞—Ä—å data –≤ –ø–æ–ª–µ name
@dp.message_handler(state=Profile.name)
async def load_name(message: types.Message, state:FSMContext) -> None:
    async with state.proxy() as data:
        data['name'] = message.text
    await message.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Çüòù')
    await Profile.next()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω 7-100
@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 100 or float(message.text) < 7, state=Profile.age)
async def ckeck_age(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!')

#–∑–∞–≥—Ä—É–∑–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å data –ø–æ–¥ –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º age
@dp.message_handler(state=Profile.age)
async def load_age(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['age'] = message.text
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É –∏ –≥–æ—Ä–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥" ')
    await Profile.next()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Ç–µ–∫—Å—Ç –ø–æ –º–∞—Å–∫–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"    
#re.match('[–ê-—è]+\,+[–ê-—è]', str(message.text)) - —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
@dp.message_handler(lambda message: not bool(re.match('[–ê-—è]+\,+[–ê-—è]', str(message.text))), state=Profile.location) #—á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ç –∑–∞–ø–∏—Å–∞–Ω–æ —É—Å–ª–æ–≤–∏–µ: —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç –∏–∑ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö, –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –∑–∞–ø—è—Ç–∞—è –∏ –ø–æ—Ç–æ–º –æ–ø—è—Ç—å —Ç–µ–∫—Å—Ç —Ç.–µ —Ñ–æ—Ä–º–∞—Ç "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"
#@dp.message_handler(lambda message: (',' in message.text) and (not message.text.isdigit()), state=Profile.location)
async def ckeck_location(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥" (—Å—Ç—Ä–æ–≥–æ, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ)')

#–∑–∞–≥—Ä—É–∑–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å data –ø–æ–¥ –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º location
@dp.message_handler(state=Profile.location)
async def load_location(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['location'] = message.text
    await message.reply('–ê —Ç–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! –û–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è –∏ —Ö–æ–±–±–∏, –∞ —Ç–∞–∫-–∂–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –≤ —Ü–µ–ª–æ–º ')
    await Profile.next()

#–∑–∞–≥—Ä—É–∑–∫–∞ –æ–ø–∏—Å–∞–Ω–∏ –≤ —Å–ª–æ–≤–∞—Ä—å data –∏ –≤—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π –∞–Ω–∫–µ—Ç—ã, –∞ —Ç–∞–∫-–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö sql –∏–∑ —Å–ª–æ–≤–∞—Ä—è data
@dp.message_handler(state=Profile.desc)
async def load_location(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text
        data['viewed_profiles'] = str(message.from_user.id)
        await bot.send_photo(chat_id=message.from_user.id, photo = data['photo'], caption=f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ --> –ò–º—è: {data['name']}; –í–æ–∑—Ä–∞—Å—Ç: {data['age']}; –õ–æ–∫–∞—Ü–∏—è: {data['location']};\n–û–ø–∏—Å–∞–Ω–∏–µ: {data['description']};")   

    await save_profile(state, user_id=message.from_user.id) #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–¥
    await message.reply(text='–ù–∞ —ç—Ç–æ–º –≤—Å—ë, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –∞–Ω–∫–µ—Ç—É! –ï—Å–ª–∏ –≤—ã —á—Ç–æ-—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤ –Ω–µ–π –ø–æ–º–µ–Ω—è—Ç—å, —Ç–æ —É –≤–∞—Å –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–º–∞–Ω–¥—É /editprofile',reply_markup=kb)
    await state.finish()




###############################################################   –±–ª–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
@dp.message_handler(commands=['edit'])
async def call_edit_profile(message: types.Message):
    profiles = await look_profile(message.from_user.id)
    k = 0
    for profile in profiles:
        if int(profile[0]) == int(message.from_user.id):
            k = 1
            break
    if k == 0:
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    elif k == 1:
        await bot.send_photo(chat_id=message.from_user.id, photo=profile[1], caption=f'–ò–º—è: {profile[2]}; –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}; –õ–æ–∫–∞—Ü–∏—è: {profile[4]};\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile[5]};')
        await message.reply(text='–í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞, —á—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:',reply_markup=ikb_edit)
#—Ç–æ–∂–µ —Å–∞–º–æ–µ, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
@dp.message_handler(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
async def call_edit_profile(message: types.Message):
    profiles = await look_profile(message.from_user.id) #–ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–æ—Ä—Ç–µ–∂ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏
    k = 0
    for profile in profiles: #—á–µ—Ä–µ–∑ —Ü–∏–∫–ª –ø—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ –ø—Ä–æ—Ñ–∏–ª—è–º –∏ –∏—â–µ–º –Ω—É–∂–Ω—ã–π –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if int(profile[0]) == int(message.from_user.id):
            k = 1
            break
    if k == 0: #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –Ω–µ—Ç
        await message.reply('–í—ã –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /create')
    elif k == 1: #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –µ—Å—Ç—å
        await bot.send_photo(chat_id=message.from_user.id, photo=profile[1],  caption=f'–ò–º—è: {profile[2]}; –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}; –õ–æ–∫–∞—Ü–∏—è: {profile[4]};\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile[5]};')
        await message.reply(text='–í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞, —á—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:',reply_markup=ikb_edit)

#—Ñ-—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# @dp.message_handler(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') #—Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
# async def go_to_main_menu(message: types.Message):
#     await message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',reply_markup=kb)

@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_return')
async def edit_return(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!', reply_markup=kb)
    

#—Ñ-—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ –∫–æ–º–º–∞–Ω–¥—É
@dp.message_handler(commands=['return'])
async def go_to_main_menu_cmd(message: types.Message):
    await message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',reply_markup=kb)

#–ø—Ä–æ–ø–∏—Å—ã–≤–∞—é –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ (—Ç.–µ –ø–æ—ç—Ç–∞–ø–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ), –Ω–æ —Å–¥–µ–ª–∞–Ω–æ –ø–æ–¥ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —Ç.–µ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏ –≤ "database" –Ω–∞–ø–∏—Å–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è (–≤ —ç—Ç–æ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ) 
class Profile_edit(StatesGroup): #–æ–±—ä–µ–∫—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –¥–ª—è FSM (–º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π)
    photo = State()
    name = State()
    age = State()
    location = State()
    desc = State()
    

#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ
@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_photo')
async def edit_profile_photo(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ')
    await Profile_edit.photo.set()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
@dp.message_handler(lambda message: not message.photo, state=Profile_edit.photo) #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ (–∫–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–≤–Ω–æ 'photo')
async def ckeck_photo_edit(message: types.Message):
    await message.reply('–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

#–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data
@dp.message_handler(content_types=['photo'], state=Profile_edit.photo) #state=Profile.photo - —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è photo
async def load_photo_edit(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data_edit: #data_edit - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤ –ë–î
        data_edit['photo'] = message.photo[0].file_id #–≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–¥ –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º photo —Å–æ—Ö—Ä–∞–Ω—è–µ–º id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    await edit_profile_photo_db(state, message.from_user.id)
    await message.reply(text='–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:', reply_markup=ikb_edit)
    await state.finish()

#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è
@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_name')
async def edit_profile_name(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è')
    await Profile_edit.name.set()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–∫—Å—Ç
@dp.message_handler(lambda message: not message.text.isalpha(), state=Profile_edit.name)  #isalpha() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ "text" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–∫—Å—Ç–∞ (—Ç.–µ –Ω–µ —Å–∏–º–≤–æ–ª—ã –∏ —Ü–∏—Ñ—Ä—ã) –∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
async def check_name_edit(message: types.Message):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–µ–∑ —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤!')

#–∑–∞–≥—Ä—É–∑–∫–∞ –∏–º–µ–Ω–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data_edit –∏ –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Profile_edit.name) 
async def load_name_edit(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data_edit: #data_edit - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤ –ë–î
        data_edit['name'] = message.text 

    await edit_profile_name_db(state, message.from_user.id)
    await message.reply(text='–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –Ω–æ–≤–æ–µ –∏–º—è, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:', reply_markup=ikb_edit)
    await state.finish()


#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç
@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_age')
async def edit_profile_age(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
    await Profile_edit.age.set()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω 7-100
@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 100 or float(message.text) < 7, state=Profile_edit.age)
async def ckeck_age_edit(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!')

#–∑–∞–≥—Ä—É–∑–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data_edit –∏ –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Profile_edit.age) 
async def load_age_edit(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data_edit: #data_edit - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤ –ë–î
        data_edit['age'] = message.text 

    await edit_profile_age_db(state, message.from_user.id)
    await message.reply(text='–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:', reply_markup=ikb_edit)
    await state.finish()


#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é
@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_location')
async def edit_profile_location(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"')
    await Profile_edit.location.set()

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∞—Å–∫—É "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"
@dp.message_handler(lambda message: not bool(re.match('[–ê-—è]+\,+[–ê-—è]', str(message.text))), state=Profile.location) #—á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ç –∑–∞–ø–∏—Å–∞–Ω–æ —É—Å–ª–æ–≤–∏–µ: —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç –∏–∑ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö, –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –∑–∞–ø—è—Ç–∞—è –∏ –ø–æ—Ç–æ–º –æ–ø—è—Ç—å —Ç–µ–∫—Å—Ç —Ç.–µ —Ñ–æ—Ä–º–∞—Ç "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"
#@dp.message_handler(lambda message: (',' in message.text) and (not message.text.isdigit()), state=Profile.location)
async def ckeck_location_edit(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥" (—Å—Ç—Ä–æ–≥–æ, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –ü—Ä–∏–º–µ—Ä: –†–æ—Å—Å–∏—è,–ú–æ—Å–∫–≤–∞)')

#–∑–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞—Ü–∏–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data_edit –∏ –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Profile_edit.location) 
async def load_location_edit(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data_edit: #data_edit - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤ –ë–î
        data_edit['location'] = message.text 

    await edit_profile_location_db(state, message.from_user.id)
    await message.reply(text='–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –≤–∞—à—É –Ω–æ–≤—É—é –ª–æ–∫–∞—Ü–∏—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:', reply_markup=ikb_edit)
    await state.finish()


#–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
@dp.callback_query_handler(lambda callback_query: callback_query.data == 'btn_description')
async def edit_profile_description(callback: types.CallbackQuery):
    await bot.send_message(chat_id=callback.from_user.id, text='–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!')
    await Profile_edit.desc.set()

#–∑–∞–≥—Ä—É–∑–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–ª–æ–≤–∞—Ä—å) data_edit –∏ –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Profile_edit.desc) 
async def load_location_edit(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data_edit: #data_edit - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–º –≤ –ë–î
        data_edit['description'] = message.text 

    await edit_profile_description_db(state, message.from_user.id)
    await message.reply(text='–ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ:', reply_markup=ikb_edit)
    await state.finish()



############################################################################### –±–ª–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á—É–∂–∏—Ö –∞–Ω–∫–µ—Ç –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º–∏
class Profile_looks(StatesGroup): #–æ–±—ä–µ–∫—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –¥–ª—è FSM (–º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π)
    callbackme = State()
    giveankety = State()
    

@dp.message_handler(text='–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')
async def look_anketi(message: types.Message) -> None:
    print('–ó–∞—à—ë–ª –≤ 1')
    await message.reply(text='–ù–∞—á–∏–Ω–∞–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã?')
    await give_ankety(types.Message,FSMContext)
    
async def findporfile(iduser):
    profiles = await look_profile(iduser)
    for profile in profiles: #–Ω–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ "viewed_profiles" ID –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–æ —ç—Ç–æ–≥–æ
        if str(profile[0]) == str(iduser):
            return str(profile[6]) 
            

@dp.message_handler()
async def give_ankety(message: types.Message, state: FSMContext):
    print('–ó–∞—à—ë–ª –≤–æ 2')
    profiles = await look_profile(message.from_user.id)
    viewed_profile = await findporfile(message.from_user.id)
    global ID  
    k = 0
    for profile in profiles:
            if str(profile[0]) not in viewed_profile:
                k = 1
                ID = int(profile[0])
                viewed_profile+= f',{ID}'
                await bot.send_photo(chat_id=message.from_user.id, photo=profile[1], 
                                    caption=f'–ò–º—è: {profile[2]}; –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}; –õ–æ–∫–∞—Ü–∏—è: {profile[4]};\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile[5]};', reply_markup=ikb_look)
                async with state.proxy() as data_look: #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π ID –≤ –±–¥
                    data_look['viewed_profiles'] = viewed_profile
                await update_log_look(state, message.from_user.id)
                await Profile_looks.callbackme.set()
                break

    if k == 0:
        await message.reply('–í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ —É–∂–µ –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏')
        await state.finish()


@dp.callback_query_handler(state= Profile_looks.callbackme)
async def callback_look_anketi(callback: types.CallbackQuery):
    print('–ó–∞—à—ë–ª –≤ 3')
    
    if callback.data == 'writeprofile':
        await bot.send_message(chat_id=callback.from_user.id,text=f'–ú—ã —Ä–∞–¥—ã —á—Ç–æ –≤–∞—Å –∫—Ç–æ-—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª, –≤–æ—Ç ID —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{ID} –ú–æ–∂–µ—Ç–µ –µ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å :D')
    elif callback.data == 'nextprofile':
        await give_ankety(types.Message,FSMContext)


if __name__ == '__main__':
    executor.start_polling(dispatcher=dp, skip_updates=True, on_startup=startup)
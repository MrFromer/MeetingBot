from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from config import TOKEN_API
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
import re
from sql import db_start, create_profile, edit_profile

storage = MemoryStorage() #—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –º–∞–Ω–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
bot = Bot(TOKEN_API)
dp  = Dispatcher(bot, storage=storage)

async def startup(_):
    await db_start() #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –±–¥
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')

#–±–ª–æ–∫ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–º–∞–Ω–¥
###################################################################################################
TEXT_START = '''
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! 
üëâüèº–í–æ—Ç —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç:
<b>/start</b> - –≤–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
<b>/create</b> - —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
<b>/cancel</b> - –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
<b>/editprofile</b> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
<b>/deleteprofile</b> - —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
<b>/description</b> - –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
'''

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_sticker(chat_id= message.chat.id, sticker="CAACAgIAAxkBAAEKoONlPeHJlBXIIlquMX1oVutb58B-tAACiwEAAiteUwujYbxpJDSDUDAE")
    await bot.send_message(chat_id=message.chat.id, text=TEXT_START, parse_mode='HTML', reply_markup=kb)
    await create_profile(user_id=message.from_user.id) #–≤—ã–∑—ã–≤–∞–µ–º —Ñ-—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await message.delete()

TEXT_DESCRIPTION = '''
–ù–∞—à –±–æ—Ç –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏!
–°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π —Å–≤–æ–∏.
'''
@dp.message_handler(commands=['description'])
async def command_start(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text=TEXT_DESCRIPTION, parse_mode='HTML', reply_markup=ReplyKeyboardRemove())
    await message.delete()
###################################################################################################
    
#–ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ø–æ—ç—Ç–∞–ø–Ω—ã–µ –¥–µ–π—Å—Ç–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è (—ç—Ç–∞–ø—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞—Å—Å–µ –Ω–∏–∂–µ), —Ç–∞–∫-–∂–µ –µ—Å—Ç—å —Ñ-—Ü–∏ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–º–º–∞–Ω–¥—É /cancel
class Profile(StatesGroup): #–æ–±—ä–µ–∫—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –¥–ª—è FSM (–º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π)
    photo = State()
    name = State()
    age = State()
    location = State()
    desc = State()
    
#–æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–≥–ª–∞–≤–Ω–∞—è)
kb = ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True, keyboard=[
    [KeyboardButton(text='/create'), KeyboardButton(text='/edit_profile')],
    [KeyboardButton(text='/profile'), KeyboardButton(text='/delete_profile')]
])

#–ø–æ–±–æ—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è)
kb_cancel = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, keyboard=[
    [KeyboardButton(text='/cancel')]
])

@dp.message_handler(commands=['cancel'], state='*') # * –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–∞ —Ñ-—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
async def command_cancel(message: types.Message, state:FSMContext): #state:FSMContext –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é state –º—ã –æ–±–æ–∑–Ω–∞—á–∞–µ–º –∫–∞–∫ FSMContext
    if state is None: #–µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–µ, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
        return
    
    await state.finish()
    await message.reply(text='–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã, –ø—Ä–∏–¥—ë—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≥–æ!', reply_markup=kb)

@dp.message_handler(commands=['create'])
async def command_create(message: types.Message) -> None:
    await message.reply(text='–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É! –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ', reply_markup=kb_cancel)
    await Profile.photo.set() #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–ª–∞—Å—Å—É Profile –∏ —Å—Ç–∞–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ 'photo'




@dp.message_handler(lambda message: not message.photo, state=Profile.photo) #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ (–∫–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–≤–Ω–æ 'photo')
async def ckeck_photo(message: types.Message):
    await message.reply('–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

@dp.message_handler(content_types=['photo'], state=Profile.photo) #state=Profile.photo - —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è photo
async def load_photo(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data: #data - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π, –ø–æ—Ç–æ–º –≤ –∫–æ–Ω—Ü–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–µ—Å—É—Ç—Å—è –≤ –±–∞–∑—É SQl
        data['photo'] = message.photo[0].file_id #–≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–¥ –∏–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º photo —Å–æ—Ö—Ä–∞–Ω—è–µ–º id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    await message.reply('–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –∏–º—è')
    await Profile.next()

@dp.message_handler(lambda message: not message.text.isalpha(), state=Profile.name)  #isalpha() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ "text" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–∫—Å—Ç–∞ (—Ç.–µ –Ω–µ —Å–∏–º–≤–æ–ª—ã –∏ —Ü–∏—Ñ—Ä—ã) –∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
async def check_name(message: types.Message):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–µ–∑ —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤!')

@dp.message_handler(state=Profile.name)
async def load_name(message: types.Message, state:FSMContext) -> None:
    async with state.proxy() as data:
        data['name'] = message.text
    await message.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Çüòù')
    await Profile.next()

@dp.message_handler(lambda message: not message.text.isdigit(), state=Profile.age)
async def ckeck_age(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞–º–∏!')

@dp.message_handler(state=Profile.age)
async def load_age(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['age'] = message.text
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É –∏ –≥–æ—Ä–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥" ')
    await Profile.next()
    
#re.match('[–ê-—è]+\,+[–ê-—è]', str(message.text)) - —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
@dp.message_handler(lambda message: not bool(re.match('[–ê-—è]+\,+[–ê-—è]', str(message.text))), state=Profile.location) #—á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ç –∑–∞–ø–∏—Å–∞–Ω–æ —É—Å–ª–æ–≤–∏–µ: —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç –∏–∑ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö, –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É –∑–∞–ø—è—Ç–∞—è –∏ –ø–æ—Ç–æ–º –æ–ø—è—Ç—å —Ç–µ–∫—Å—Ç —Ç.–µ —Ñ–æ—Ä–º–∞—Ç "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥"
#@dp.message_handler(lambda message: (',' in message.text) and (not message.text.isdigit()), state=Profile.location)
async def ckeck_location(message: types.Message):
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–°—Ç—Ä–∞–Ω–∞,–ì–æ—Ä–æ–¥" (—Å—Ç—Ä–æ–≥–æ, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ)')


@dp.message_handler(state=Profile.location)
async def load_location(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['location'] = message.text
    await message.reply('–ê —Ç–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! –û–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è –∏ —Ö–æ–±–±–∏, –∞ —Ç–∞–∫-–∂–µ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –≤ —Ü–µ–ª–æ–º ')
    await Profile.next()

@dp.message_handler(state=Profile.desc)
async def load_location(message: types.Message, state:FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text

    await edit_profile(state, user_id=message.from_user.id)
    await bot.send_photo(chat_id=message.from_user.id, photo = data['photo'], caption=f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞: {data['name']}, {data['age']}, {data['location']}\n{data['description']}")    
    await message.reply('–ù–∞ —ç—Ç–æ–º –≤—Å—ë, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –∞–Ω–∫–µ—Ç—É! –ï—Å–ª–∏ –≤—ã —á—Ç–æ-—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤ –Ω–µ–π –ø–æ–º–µ–Ω—è—Ç—å, —Ç–æ —É –≤–∞—Å –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–º–∞–Ω–¥—É /editprofile')
    await state.finish()



if __name__ == '__main__':
    executor.start_polling(dispatcher=dp, skip_updates=True, on_startup=startup)